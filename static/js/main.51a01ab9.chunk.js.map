{"version":3,"sources":["components/Navbar.js","components/Home.js","redux/actions/contactActions.js","components/AddContact.js","components/EditContact.js","App.js","redux/reducers/contactReducer.js","index.js"],"names":["Navbar","className","to","Home","contacts","useSelector","state","dispatch","useDispatch","scope","length","colSpan","map","contact","id","name","email","phone","onClick","type","payload","deleteContacts","toast","success","deleteContact","AddContact","history","useHistory","useState","setName","setEmail","setPhone","onSubmit","e","preventDefault","chackEmail","find","chackPhone","parseInt","warning","error","data","push","class","htmlFor","placeholder","value","onChange","target","EditContact","useParams","currContact","useEffect","App","exact","path","component","initialState","contactReducer","action","updateContact","filterContact","filter","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"sOAaeA,MAVf,WACI,OACI,qBAAKC,UAAU,mDAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,oBAAlC,sC,cCsDDE,MAvDf,WAEI,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,KAClCC,EAAWC,cAQjB,OACI,sBAAKP,UAAU,iBAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,sCACA,cAAC,IAAD,CAAMC,GAAG,kBAAkBD,UAAU,uBAArC,yBAEJ,wBAAOA,UAAU,4CAAjB,UACI,uBAAOA,UAAU,qBAAjB,SACI,+BACI,oBAAIQ,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,yBAGR,gCAG4B,IAApBL,EAASM,OACH,6BACE,oBAAIC,QAAQ,IAAZ,gCAEFP,EAASQ,KAAI,SAACC,EAASC,GAAV,OACX,+BACI,6BAAKA,EAAK,IACV,6BAAKD,EAAQE,OACb,6BAAKF,EAAQG,QACb,6BAAKH,EAAQI,QACb,+BACI,cAAC,IAAD,CAAMf,GAAE,2BAAsBW,EAAQC,IAAMb,UAAU,oCAAtD,kBACA,wBAAQiB,QAAS,kBApC/B,SAACJ,GACnBP,ECCsB,SAACO,GAC3B,MAAO,CACHK,KAAM,iBACNC,QAASN,GDJAO,CAAeP,IACxBQ,IAAMC,QAAQ,+BAkCyCC,CAAcX,EAAQC,KAAKb,UAAU,2BAA5D,sC,QEkCzBwB,MA5Ef,WACI,IAAMC,EAAUC,cAEhB,EAAsBC,mBAAS,IAA/B,mBAAMb,EAAN,KAAYc,EAAZ,KACA,EAAwBD,mBAAS,IAAjC,mBAAMZ,EAAN,KAAac,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAMX,EAAN,KAAac,EAAb,KAEM3B,EAAWC,aAAY,SAACC,GAAD,OAASA,KAChCC,EAAWC,cAoCjB,OACI,qBAAKP,UAAU,iBAAf,SAEI,sBAAKA,UAAU,mBAAf,UACI,0CACA,uBACA,uBAAM+B,SAxCG,SAACC,GAClBA,EAAEC,iBAEF,IAAMC,EAAa/B,EAASgC,MAAK,SAACvB,GAAD,OAAaA,EAAQG,QAAUA,GAASA,KACnEqB,EAAajC,EAASgC,MAAK,SAACvB,GAAD,OAAaA,EAAQI,QAAUqB,SAASrB,MAGzE,IAAIF,IAASC,IAAUC,EACnB,OAAOK,IAAMiB,QAAQ,6BAGzB,GAAGJ,EACC,OAAOb,IAAMkB,MAAM,8BAGvB,GAAGH,EACC,OAAOf,IAAMkB,MAAM,8BAGvB,IAAMC,EAAO,CACT3B,GAAIV,EAASM,OACbK,KAAMA,EACNC,MAAOA,EACPC,MAAMA,GAGVV,EDzCG,CACHY,KAAM,cACNC,QCuCqBqB,IAErBnB,IAAMC,QAAQ,6BAEdG,EAAQgB,KAAK,gBAUL,UACI,sBAAKC,MAAM,OAAX,UACI,uBAAOC,QAAQ,OAAOD,MAAM,aAA5B,oBACA,uBAAOxB,KAAK,OAAOwB,MAAM,eAAe7B,GAAG,OAAO+B,YAAY,aAC1DC,MAAO/B,EAAMgC,SAAU,SAACd,GAAD,OAAOJ,EAAQI,EAAEe,OAAOF,aAGvD,sBAAKH,MAAM,OAAX,UACI,uBAAOC,QAAQ,QAAQD,MAAM,aAA7B,qBACA,uBAAOxB,KAAK,QAAQwB,MAAM,eAAe7B,GAAG,QAAQ+B,YAAY,cAC5DC,MAAO9B,EAAO+B,SAAU,SAACd,GAAD,OAAOH,EAASG,EAAEe,OAAOF,aAGzD,sBAAKH,MAAM,OAAX,UACI,uBAAOC,QAAQ,QAAQD,MAAM,aAA7B,wBACA,uBAAOxB,KAAK,SAASwB,MAAM,eAAe7B,GAAG,QAAQ+B,YAAY,iBAC7DC,MAAO7B,EAAO8B,SAAU,SAACd,GAAD,OAAOF,EAASE,EAAEe,OAAOF,aAGzD,wBAAQ3B,KAAK,SAASwB,MAAM,kBAA5B,6BC2BLM,MA9Ff,WACI,IAAMvB,EAAUC,cAERb,EAAOoC,cAAPpC,GAER,EAAwBc,mBAAS,IAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOZ,EAAP,KAAcc,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOX,EAAP,KAAcc,EAAd,KAEM3B,EAAWC,aAAY,SAACC,GAAD,OAAWA,KAClC6C,EAAc/C,EAASgC,MAAK,SAACvB,GAAD,OAAaA,EAAQC,KAAOwB,SAASxB,MACjEP,EAAWC,cA0CjB,OAxCA4C,qBAAU,WACNvB,EAAQsB,EAAYpC,MACpBe,EAASqB,EAAYnC,OACrBe,EAASoB,EAAYlC,SACtB,CAACkC,IAqCA,qBAAKlD,UAAU,iBAAf,SACI,qBAAKA,UAAU,mBAAf,SAEQkD,EACI,qCACI,4CAAerC,KACf,uBACA,uBAAMkB,SA1CT,SAACC,GAClBA,EAAEC,iBAEF,IAAMC,EAAa/B,EAASgC,MAAK,SAACvB,GAAD,OAAaA,EAAQC,KAAOwB,SAASxB,IAAOD,EAAQG,QAAUA,KACzFqB,EAAajC,EAASgC,MAAK,SAACvB,GAAD,OAAaA,EAAQC,KAAOwB,SAASxB,IAAOD,EAAQI,QAAUqB,SAASrB,MAGxG,IAAIF,IAASC,IAAUC,EACnB,OAAOK,IAAMiB,QAAQ,6BAGzB,GAAGJ,EACC,OAAOb,IAAMkB,MAAM,8BAGvB,GAAGH,EACC,OAAOf,IAAMkB,MAAM,8BAGvB,IAAMC,EAAO,CACT3B,GAAIwB,SAASxB,GACbC,KAAMA,EACNC,MAAOA,EACPC,MAAMA,GAGVV,EF7CG,CACHY,KAAM,iBACNC,QE2CwBqB,IAExBnB,IAAMC,QAAQ,+BAEdG,EAAQgB,KAAK,iBAYO,UACI,sBAAKC,MAAM,OAAX,UACI,uBAAOC,QAAQ,OAAOD,MAAM,aAA5B,oBACA,uBAAOxB,KAAK,OAAOwB,MAAM,eAAe7B,GAAG,OAAO+B,YAAY,aAC1DC,MAAO/B,EAAMgC,SAAU,SAACd,GAAD,OAAOJ,EAAQI,EAAEe,OAAOF,aAGvD,sBAAKH,MAAM,OAAX,UACI,uBAAOC,QAAQ,QAAQD,MAAM,aAA7B,qBACA,uBAAOxB,KAAK,QAAQwB,MAAM,eAAe7B,GAAG,QAAQ+B,YAAY,cAC5DC,MAAO9B,EAAO+B,SAAU,SAACd,GAAD,OAAOH,EAASG,EAAEe,OAAOF,aAGzD,sBAAKH,MAAM,OAAX,UACI,uBAAOC,QAAQ,QAAQD,MAAM,aAA7B,wBACA,uBAAOxB,KAAK,SAASwB,MAAM,eAAe7B,GAAG,QAAQ+B,YAAY,iBAC7DC,MAAO7B,EAAO8B,SAAU,SAACd,GAAD,OAAOF,EAASE,EAAEe,OAAOF,aAGzD,wBAAQ3B,KAAK,SAASwB,MAAM,uBAA5B,oBACA,cAAC,IAAD,CAAMzC,GAAG,IAAID,UAAU,yBAAvB,0BAIR,mCAAE,oDAAuBa,EAAvB,8BCrEXuC,MAff,WAEE,OACE,qCACE,cAAC,IAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWrD,IAC3C,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,kBAAkBC,UAAW/B,IAC/C,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,uBAAuBC,UAAWP,W,8BClBtDQ,EAAe,CACjB,CACI3C,GAAI,EACJC,KAAM,aACNC,MAAO,iBACPC,MAAO,YAEX,CACIH,GAAI,EACJC,KAAM,cACNC,MAAO,kBACPC,MAAO,aA2BAyC,EApBQ,WAAmC,IAAlCpD,EAAiC,uDAAzBmD,EAAcE,EAAW,uCACrD,OAAQA,EAAOxC,MACX,IAAK,cAED,OADAb,EAAK,sBAAOA,GAAP,CAAcqD,EAAOvC,UAG9B,IAAK,iBACD,IAAMwC,EAAgBtD,EAAMM,KAAI,SAACC,GAAD,OAAaA,EAAQC,KAAO6C,EAAOvC,QAAQN,GAAK6C,EAAOvC,QAAUP,KAEjG,OADAP,EAAQsD,EAGZ,IAAK,iBACD,IAAMC,EAAgBvD,EAAMwD,QAAO,SAACjD,GAAD,OAAYA,EAAQC,KAAO6C,EAAOvC,SAAWP,KAEhF,OADAP,EAAQuD,EAGZ,QAAS,OAAOvD,I,QCpBlByD,EAAQC,sBAAYN,EAAgBO,iCAE1CC,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGNK,SAASC,eAAe,W","file":"static/js/main.51a01ab9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark py-3\">\r\n            <div className=\"container\">\r\n                <Link to='/contactapp/' className=\"navbar-brand ml-5\">React-Redux Contact</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { deleteContacts } from '../redux/actions/contactActions';\r\n\r\nfunction Home() {\r\n\r\n    const contacts = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const deleteContact = (id) => {\r\n        dispatch(deleteContacts(id));\r\n        toast.success('User successfully Deleted!!');\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <div className=\"d-flex justify-content-between\">\r\n                <h3>Home</h3>\r\n                <Link to=\"/contactapp/add\" className=\"btn btn-outline-dark\">Add User</Link>\r\n            </div>\r\n            <table className=\"table table-hover mt-4 border text-center\">\r\n                <thead className=\"bg-dark text-white\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">phone</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {\r\n                        contacts.length === 0\r\n                            ? <tr>\r\n                                <td colSpan=\"5\">No Contact Found</td>\r\n                            </tr>\r\n                            : contacts.map((contact, id) => (\r\n                                <tr>\r\n                                    <td>{id + 1}</td>\r\n                                    <td>{contact.name}</td>\r\n                                    <td>{contact.email}</td>\r\n                                    <td>{contact.phone}</td>\r\n                                    <td>\r\n                                        <Link to={`/contactapp/edit/${contact.id}`} className=\"btn btn-outline-warning me-1 py-0\">Edit</Link>\r\n                                        <button onClick={() => deleteContact(contact.id)} className=\"btn btn-danger ms-1 py-0\">Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export const addContacts = (contact) => {\r\n    return {\r\n        type: 'ADD_CONTACT',\r\n        payload: contact\r\n    }\r\n}\r\n\r\nexport const updateContacts = (contact) => {\r\n    return {\r\n        type: 'UPDATE_CONTACT',\r\n        payload: contact\r\n    }\r\n}\r\n\r\nexport const deleteContacts = (id) => {\r\n    return {\r\n        type: 'DELETE_CONTACT',\r\n        payload: id\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { addContacts } from '../redux/actions/contactActions';\r\n\r\nfunction AddContact() {\r\n    const history = useHistory();\r\n\r\n    const[name, setName]= useState('');\r\n    const[email, setEmail]= useState('');\r\n    const[phone, setPhone]= useState('');\r\n\r\n    const contacts = useSelector((state)=>state);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const chackEmail = contacts.find((contact) => contact.email === email && email);\r\n        const chackPhone = contacts.find((contact) => contact.phone === parseInt(phone));\r\n        // console.log(chackEmail);\r\n\r\n        if(!name || !email || !phone){\r\n            return toast.warning('Please fill empty field!!');\r\n        }\r\n\r\n        if(chackEmail){\r\n            return toast.error('This email already exist!!');\r\n        }\r\n\r\n        if(chackPhone){\r\n            return toast.error('This phone already exist!!');\r\n        }\r\n\r\n        const data = {\r\n            id: contacts.length,\r\n            name: name,\r\n            email: email,\r\n            phone:phone\r\n        }\r\n\r\n        dispatch(addContacts(data));\r\n\r\n        toast.success('User successfully Added!!');\r\n\r\n        history.push('/contactapp');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n\r\n            <div className=\"shadow py-4 px-5\">\r\n                <h3>Add User</h3>\r\n                <hr/>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div class=\"mb-3\">\r\n                        <label htmlFor=\"name\" class=\"form-label\">Name *</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\"\r\n                            value={name} onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label htmlFor=\"email\" class=\"form-label\">Email *</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter Email\"\r\n                            value={email} onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label htmlFor=\"phone\" class=\"form-label\">Phone No *</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"phone\" placeholder=\"Enter Phone No\"\r\n                            value={phone} onChange={(e) => setPhone(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { updateContacts } from '../redux/actions/contactActions';\r\n\r\n\r\nfunction EditContact() {\r\n    const history = useHistory();\r\n\r\n    const { id } = useParams();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const contacts = useSelector((state) => state);\r\n    const currContact = contacts.find((contact) => contact.id === parseInt(id));\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        setName(currContact.name);\r\n        setEmail(currContact.email);\r\n        setPhone(currContact.phone);\r\n    }, [currContact])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const chackEmail = contacts.find((contact) => contact.id !== parseInt(id) && contact.email === email);\r\n        const chackPhone = contacts.find((contact) => contact.id !== parseInt(id) && contact.phone === parseInt(phone));\r\n        // console.log(chackEmail);\r\n\r\n        if(!name || !email || !phone){\r\n            return toast.warning('Please fill empty field!!');\r\n        }\r\n\r\n        if(chackEmail){\r\n            return toast.error('This email already exist!!');\r\n        }\r\n\r\n        if(chackPhone){\r\n            return toast.error('This phone already exist!!');\r\n        }\r\n\r\n        const data = {\r\n            id: parseInt(id),\r\n            name: name,\r\n            email: email,\r\n            phone:phone\r\n        }\r\n\r\n        dispatch(updateContacts(data));\r\n\r\n        toast.success('User successfully Updated!!');\r\n\r\n        history.push('/contactapp/');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <div className=\"shadow py-4 px-5\">\r\n                {\r\n                    currContact ? (\r\n                        <>\r\n                            <h3>Edit User {id}</h3>\r\n                            <hr />\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div class=\"mb-3\">\r\n                                    <label htmlFor=\"name\" class=\"form-label\">Name *</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\"\r\n                                        value={name} onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label htmlFor=\"email\" class=\"form-label\">Email *</label>\r\n                                    <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter Email\"\r\n                                        value={email} onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label htmlFor=\"phone\" class=\"form-label\">Phone No *</label>\r\n                                    <input type=\"number\" class=\"form-control\" id=\"phone\" placeholder=\"Enter Phone No\"\r\n                                        value={phone} onChange={(e) => setPhone(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <button type=\"submit\" class=\"btn btn-warning me-2\">Update</button>\r\n                                <Link to=\"/\" className=\"btn btn-outline-danger\">Cancel</Link>\r\n                            </form>\r\n                        </>\r\n                    ) : (\r\n                        <><h3>Edit User with Id {id} is not present!!</h3></>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditContact\r\n","import './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport Navbar from './components/Navbar';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport AddContact from './components/AddContact';\nimport EditContact from './components/EditContact';\n\n\nfunction App() {\n  // const notify = () => toast(\"Wow so easy !\");\n  return (\n    <>\n      <ToastContainer />\n      <Navbar />\n      <Switch>\n        <Route exact path='/contactapp' component={Home}></Route>\n        <Route exact path='/contactapp/add' component={AddContact}></Route>\n        <Route exact path='/contactapp/edit/:id' component={EditContact}></Route>\n      </Switch>\n    </>\n  )\n}\n\nexport default App;\n","const initialState = [\r\n    {\r\n        id: 0,\r\n        name: 'desai jeet',\r\n        email: 'jeet@gmail.com',\r\n        phone: 1111111111\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'desai jeet2',\r\n        email: 'jeet2@gmail.com',\r\n        phone: 2222222222\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\nconst contactReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CONTACT':\r\n            state = [...state, action.payload];\r\n            return state;\r\n\r\n        case 'UPDATE_CONTACT':\r\n            const updateContact = state.map((contact) => contact.id === action.payload.id ? action.payload : contact);\r\n            state = updateContact;\r\n            return state;\r\n\r\n        case 'DELETE_CONTACT':\r\n            const filterContact = state.filter((contact)=> contact.id !== action.payload && contact);\r\n            state = filterContact;\r\n            return state;\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default contactReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { createStore } from 'redux';\nimport contactReducer from './redux/reducers/contactReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}